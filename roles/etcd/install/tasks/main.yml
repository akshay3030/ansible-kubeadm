---

- name: "Set ectd cluster addresses"
  set_fact:
    etcd_access_addresses: |-
      {% for item in groups['etcd'] -%}
        https://{{ hostvars[item]['ip'] }}:2379{% if not loop.last %},{% endif %}
      {%- endfor %}
    etcd_peer_url: https://{{ ip }}:2379

- name: Install etcd
  unarchive:
    src: https://github.com/coreos/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz
    dest: /usr/local/bin
    extra_opts: [--strip-components=1]
    remote_src: yes

- name: "Check if cluster already exists"
  shell: "etcdctl cluster-health | grep -q 'cluster is healthy'"
  register: etcd_cluster_is_healthy
  ignore_errors: true
  changed_when: false
  check_mode: no
  environment:
    ETCDCTL_ENDPOINTS: "https://127.0.0.1:2379"
    ETCDCTL_CA_FILE: "/etc/etcd/pki/ca.pem"
    ETCDCTL_CERT_FILE: "/etc/etcd/pki/client.pem"
    ETCDCTL_KEY_FILE: "/etc/etcd/pki/client-key.pem"

- name: "Create etcd.env"
  template:
    src: ../templates/etcd.env.j2
    dest: /etc/etcd.env
    owner: root
    group: root
    mode: 0644

- name: "Create etcd.service"
  template:
    src: ../templates/etcd.service.j2
    dest: /etc/systemd/system/etcd.service
    owner: root
    group: root
    mode: 0644

- name: "Join etcd cluster"
  when: etcd_cluster_is_healthy.rc == 0
  shell: "etcdctl member add {{ inventory_hostname }} {{ etcd_peer_url }}"
  register: member_add_result
  until: member_add_result.rc == 0
  retries: 4
  environment:
    ETCDCTL_ENDPOINTS: "{{ etcd_access_addresses }}"
    ETCDCTL_CA_FILE: "/etc/etcd/pki/ca.pem"
    ETCDCTL_CERT_FILE: "/etc/etcd/pki/client.pem"
    ETCDCTL_KEY_FILE: "/etc/etcd/pki/client-key.pem"

- name: "Reload systemd and restart etcd"
  systemd:
    daemon_reload: yes
    name: "etcd.service"
    state: "restarted"
