---

- name: Check if local certificates exist
  command: test -f {{ local_kubernetes_secrets_dir }}/pki/"{{ item }}"
  with_items:
   - ca.crt
   - ca.key
   - front-proxy-ca.crt
   - front-proxy-ca.key
   - sa.pub
   - sa.key
  become: no
  run_once: true
  ignore_errors: true
  delegate_to: localhost
  register: kubernetes_certs_exist

- name: "Trying to fetch certificates from {{ groups['kube-controllers'][0] }}"
  fetch:
    src: /etc/kubernetes/pki/{{ item }}
    dest: "{{ local_kubernetes_secrets_dir }}/pki/{{ item }}"
    flat: yes
    fail_on_missing: true
  when: kubernetes_certs_exist is failed
  with_items:
   - ca.crt
   - ca.key
   - front-proxy-ca.crt
   - front-proxy-ca.key
   - sa.pub
   - sa.key
  run_once: true
  ignore_errors: true
  register: kubernetes_certs_fetched

- name: "Fail if no certificates are found and generation is disabled"
  fail:
    msg: "Certificates not found and kubernetes_generate_certs=false on the configuration!"
  when: kubernetes_certs_fetched is failed and kubernetes_certs_exist is failed and (kubernetes_generate_certs == false or kubernetes_generate_certs is not defined)

- name: "Generate certificates on {{ groups['kube-controllers'][0] }}"
  command: kubeadm alpha phase certs all
  when: kubernetes_certs_fetched is failed and kubernetes_certs_exist is failed
  run_once: true

- name: "Fetch generated certificates from {{ groups['kube-controllers'][0] }}"
  fetch:
    src: /etc/kubernetes/pki/{{ item }}
    dest: "{{ local_kubernetes_secrets_dir }}/pki/{{ item }}"
    flat: yes
    fail_on_missing: true
  when: kubernetes_certs_fetched is failed and kubernetes_certs_exist is failed
  with_items:
   - ca.crt
   - ca.key
   - front-proxy-ca.crt
   - front-proxy-ca.key
   - sa.pub
   - sa.key
  run_once: true
